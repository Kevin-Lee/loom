#!/bin/sh -eu

. test/cli/core/env.sh

ROOT="$(pwd)"
cd test/cli/purs
rm -rf dist
rm -rf .loom
export LOOM_SITE_PREFIX="http://test/prefix/"
export LOOM_OUTPUT_HASKELL="dist/haskell"
export LOOM_OUTPUT_SITE="dist/site"
$LOOM build
$LOOM test | grep "third"

file_exists() {
  if [ ! -e "$1" ]; then
    echo "Could not find $1"
    exit 1
  fi
}

contains() {
  grep -q "$2" "$1" || (echo "Could not find '$2' in '$1'" && exit 1)
}

file_exists "${LOOM_OUTPUT_HASKELL}/assets/main.js"
# contains "${LOOM_OUTPUT_HASKELL}/test_build.css" "\"/assets/other/components/c1/image.svg\""
pushd "$LOOM_OUTPUT_HASKELL"
set -x
js=$(node -e "eval(require('fs').readFileSync('assets/main.js').toString());console.log(require('purs')['Foo'].foo5);")
[ "$js" == "foo  " ]
popd


ALL_PURS_PATHS=$($LOOM paths purs)
ALL_PURS_PATHS_EXPLICIT=$($LOOM paths purs --all-paths)
APP_PURS_PATHS=$($LOOM paths purs --app-paths)
LIB_PURS_PATHS=$($LOOM paths purs --lib-paths)
ALL_PURS_TEST_PATHS=$($LOOM paths purs.test)

EXPECTED_ALL_PURS_PATHS=".loom/purs/*/src/**/*.purs
./components/*/**/*.purs
library/components/*/**/*.purs
./app/purs/src/**/*.purs
library/app/purs/src/**/*.purs"

[[ "$(echo "$ALL_PURS_PATHS" | sort)" == "$(echo "$ALL_PURS_PATHS_EXPLICIT" | sort)" ]] || \
  (echo "--all-paths result doesn't match the implicit all-paths result."; exit 99);

[[ "$(echo "$ALL_PURS_PATHS" | sort)" == "$(echo "$EXPECTED_ALL_PURS_PATHS" | sort)" ]] || \
  (echo "--all-paths result don't match the hardcoded expected paths list."; exit 99);

[[ "$(echo "$ALL_PURS_PATHS" | sort)" == "$((echo "$LIB_PURS_PATHS"; echo "$APP_PURS_PATHS") | sort)" ]] || \
  (echo "--all-paths don't match --app-paths + --lib-paths"; exit 99);

[[ "$(echo "$ALL_PURS_TEST_PATHS" | grep -c 'app/purs/test')" -eq 1 ]] || \
  (echo "the test path app/purs/test must appear exactly once (our own testing dir, and not ./library/'s)"; exit 99);
